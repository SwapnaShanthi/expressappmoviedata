{"version":3,"sources":["logo.svg","components/MovieDataForm.js","components/MovieDataResults.js","components/MovieSearchHistory.js","components/MovieDataApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MovieDataForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","emptyResultData","handleSubmit","event","preventDefault","state","search","apiCall","_this2","react_default","a","createElement","onSubmit","className","type","onChange","searchErrorMessage","error","Component","MovieDataResults","resultdata","Title","Year","Plot","MovieSearchHistory","console","log","id","alert","deleteItemsFromsearchHistory","searchhistory","map","items","index","onClick","moviedetails","MovieDataApp","axios","delete","params","then","response","searchHistory","catch","searchdata","get","data","status","Tile","Error","components_MovieDataForm","components_MovieDataResults","components_MovieSearchHistory","App","components_MovieDataApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9fc9fc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport '../styles/moviedata.css'\n\nclass MovieDataForm extends Component {\n\n   constructor(props){\n\n        super(props);\n        this.state={search:\"\"}\n    \n  }\n  handleChange=(e)=>{\n\n    this.setState({[e.target.name]:e.target.value});\n    if(e.target.name===\"search\" && e.target.value===\"\"){\n     this.props.emptyResultData();\n    }\n\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if(this.state.search!== \"\"){\n        this.props.apiCall(this.state.search);\n    }\n  }\n  render() {\n    const errorDisplay=()=>{\n      if(this.props.error!== \"\"){\n          return (<div className=\"errormessage\">{this.props.error}</div>)\n      }\n      return null;\n  }\n    return (\n        <div > \n        <h1>Movie Data</h1>\n        <form  onSubmit={this.handleSubmit}>\n           <div  className=\"formdiv\">\n               \n                <input className=\"searchbar\" type=\"text\" name=\"search\" onChange={this.handleChange} value={this.state.search} />\n                \n                <label>{this.state.searchErrorMessage}</label>\n\n                <input className=\"buttonstyle\" type=\"submit\" name=\"Search\"/>\n                <span className=\"spanplot\">{errorDisplay()}</span>\n            </div>    \n        </form>\n        </div>\n    );\n  }\n}\n\nexport default MovieDataForm;","import React, { Component } from 'react';\n\nclass MovieDataResults extends Component {\n  render() {\n\n    const resultDisplay=()=>{\n        if(this.props.resultdata!==\"\" && this.props.error === \"\"){\n            return (<div className=\"resultdiv\">\n                        <p><span className=\"span\">Titel: {this.props.resultdata.Title}</span></p>\n                        <p><span className=\"span\">Year : {this.props.resultdata.Year}</span></p>\n                        <p><span className=\"spanplot\">Plot : {this.props.resultdata.Plot}</span></p>\n                     </div>\n                     )\n        }\n      return null;\n    }\n    return (\n        <div>\n        {resultDisplay()}\n        </div>\n    );\n  }\n}\n\nexport default MovieDataResults;","import React, { Component } from 'react';\nimport '../styles/moviedata.css'\n\n\nclass MovieSearchHistory extends Component {\n  constructor(props){\n\n    super(props);\n  }\n\n  handleChange=(e)=>{\n    console.log(e.target.id);\n    alert(\"Do you want to delete this from the search history?\");\n    this.props.deleteItemsFromsearchHistory(e.target.id);\n    \n\n  }\n  render() {\n     \n    const resultDisplay=()=>{\n        if(this.props.searchhistory!==\"\"){\n        const display=this.props.searchhistory.map((items,index)=>{\n            return (<div>\n                        <p><span onClick={this.handleChange} id={items.id} className=\"searchspan\">{items.moviedetails.Title}</span></p>\n                     </div>\n                     )\n          }) \n          return display;          \n        }\n      return null;\n    }\n   \n    return (\n        <div><h3>Search History</h3>\n        {resultDisplay()}\n        </div>\n    );\n  }\n}\n\nexport default MovieSearchHistory;","import React, { Component } from 'react';\nimport MovieDataForm from './MovieDataForm';\nimport MovieDataResults from './MovieDataResults';\nimport MovieSearchHistory from './MovieSearchHistory';\nimport axios from 'axios';\nimport '../styles/moviedata.css'\n\nclass MovieDataApp extends Component {\n  constructor(props){\n\n    super(props);\n    this.state={search:\"\",\n                resultdata:{},\n                apiCall:false,\n                error:\"\",\n                searchhistory:[]\n               }\n\n  }\n  emptyResultData=()=>{\n    let resultdata={}\n    this.setState({ resultdata:resultdata});\n    this.setState({apiCall:false});\n    this.setState({error:\"\"})\n  }\n  deleteItemsFromsearchHistory=(id)=>{\n    axios.delete(`http://localhost:5000/deletesearch/`,{params: { id: id }})\n         .then((response) => {\n              console.log(`Delete Personal Task`);\n              this.searchHistory();\n          })\n          .catch((error) => {\n               console.log(error)\n          })\n\n\n  }\n\n  apiCall=(searchdata) =>{\n    axios.get(`http://localhost:5000/moviedata/`, {params: { id: searchdata }})\n         .then(response => {\n                const resultdata = response.data;\n                console.log(response.data);\n                if(response.data.status){\n                  if(response.data.moviedetails.Tile!== null){\n                    this.setState({ resultdata:response.data.moviedetails});\n                    this.setState({apiCall:true});\n                    this.setState({error:\"\"});\n                    this.searchHistory();\n                  }else{\n                    this.searchHistory();\n                    this.setState({error:\"Movie not found!\"});\n                  }\n                }else{\n                    //this.setState({error:resultdata.Error});\n                    this.setState({ resultdata:\"\"});\n                    this.setState({apiCall:false});\n                    this.setState({error:\"Movie not found!\"});\n                    this.searchHistory();\n                }\n        })\n        .catch(error => {\n            this.setState({error:\"Error occured during the call please try again\"});\n            this.setState({apiCall:false});\n        });\n  }\n  searchHistory=()=>{\n    axios.get(`http://localhost:5000/searchhistory/`)\n         .then(response => {\n           const resultdata = response.data;\n           console.log(response.data);\n           if(response.data.status){\n               this.setState({ searchhistory:response.data.data});\n               //this.setState({apiCall:true});\n               //this.setState({error:\"\"});\n               console.log(this.state.searchhistory);\n           }else{\n               this.setState({error:resultdata.Error});\n               \n               //this.setState({ resultdata:\"\"});\n          \n               //this.setState({apiCall:false});\n           }\n   })\n   .catch(error => {\n       this.setState({error:\"Error occured during the call please try again\"});\n       this.setState({apiCall:false});\n   });\n\n\n  }\n  componentDidMount(){\n     this.searchHistory();\n  }\n  render() {\n    const emptyDiv=()=>{\n        if(this.state.apiCall || this.state.error!= \"\" ){\n            return (<div> \n                        <MovieDataResults resultdata={this.state.resultdata} error={this.state.error}/>\n            \n                    </div>)\n        }\n       return null;\n    }\n    const displaySearchHistory=()=>{\n      if(this.state.searchhistory!= \"\" ){\n          return (<div >\n                      <MovieSearchHistory deleteItemsFromsearchHistory={this.deleteItemsFromsearchHistory} searchhistory={this.state.searchhistory} error={this.state.error}/>\n                 </div> )\n      }\n     return null;\n    }\n    return (\n      <div >\n        <div className=\"outerdiv\" >\n              <div >\n                  <MovieDataForm  apiCall={this.apiCall} emptyResultData={this.emptyResultData} error={this.state.error}/>\n              </div>  \n              {emptyDiv()}\n        </div>\n        <div className=\"searchhistorydiv \">\n              {displaySearchHistory()}\n        </div>\n       </div>\n    );\n  }\n}\n\nexport default MovieDataApp;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MovieDataApp from './components/MovieDataApp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MovieDataApp/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}